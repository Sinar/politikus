[sources]

# Examples: to check out plonetheme.sunburst from Plone's svn, use:
# plonetheme.sunburst = svn https://svn.plone.org/svn/plone/plonetheme.sunburst/trunk
#
# To use a python package that is being developed in your src subdirectory, use:
# myproduct.betterplone = fs myproduct.betterplone

politikus.contenttypes = git https://github.com/Sinar/politikus.contenttypes
popolo.contenttypes = git https://github.com/Sinar/popolo.contenttypes
ocds.contenttypes = git https://github.com/Sinar/ocds.contenttypes
politikus.bods = git https://github.com/Sinar/politikus.bods
collective.vocabularies.iso = git https://github.com/Sinar/collective.vocabularies.iso

[buildout]

# buildout.sanitycheck makes sure you're not running buildout
# as root.
# mr.developer, a tool that automatically checks out source for
# add ons from a versioning system, then adds them to your
# development package list.
extensions =
    mr.developer

# mr.developer settings:
always-checkout = force
sources = sources
auto-checkout = politikus.contenttypes
                politikus.bods
                popolo.contenttypes
                ocds.contenttypes
                collective.vocabularies.iso


effective-user = 

############################################
# Plone Component Versions
# ------------------------
# This version of the Unified Installer has the components of Plone 5
# preloaded so that it can install without an Internet connection.
# If you want to update, uncomment the "http://..." line below,
# edit it to point to the current version URL, comment out the
# "versions.cfg" line and run "bin/buildout" while attached to the
# Internet. Generally, you only want to do that as part of a planned migration.
# Note that if you are updating components, you should also check the versions
# section at the end of this file, since recipes or components other than
# those of Zope and Plone may need updating at the same time.
#
extends =
    https://dist.plone.org/release/5.2.2-pending/versions.cfg

# If you change your Plone version, you'll also need to update
# the repository link below.
find-links +=
    https://dist.plone.org/release/5.2.2


############################################
# Eggs
# ----
# Add an indented line to the eggs section for any Python
# eggs or packages you wish to include in your Plone instance.
#
# Note that versions may be specified here or in the [versions]
# section below. You should always specify versions that you know
# are compatible with the Plone release and at an acceptable
# development level.
#
# If you update to a later version of Plone, remove the hotfix.
#
############################################
# ZCML Slugs
# ----------
# Some eggs need ZCML slugs to tell Zope to
# use them. This is increasingly rare.
zcml =
#    plone.reload



############################################
# Development Eggs
# ----------------
# You can use paster to create "development eggs" to
# develop new products/themes. Put these in the src/
# directory.
# You will also need to add the egg names in the
# eggs section above, and may also need to add them
# to the zcml section.
#
# Provide the *paths* to the eggs you are developing here:
develop =
#    src/my.package
    src/politikus.contenttypes
    src/popolo.contenttypes
    src/politikus.bods
    src/collective.vocabularies.iso

############################################
# var Directory
# -------------
# Sets the target directory for the "var" components of the install such as
# database and log files.
#
var-dir=${buildout:directory}/var

############################################
# Backup Directory
# ----------------
# Sets the target directory for the bin/backup and bin/snapshotbackup
# commands. Default is inside this project's var directory, but ideally
# this should be on a separate volume or backup server.
#
backups-dir=${buildout:var-dir}

############################################
# Initial User
# ------------
# This is the user id and password that will be used to create the initial
# user id that will allow you to log in and create a Plone site. This only
# sets the initial password; it will not allow you to change an already
# existing password. If you change the admin password via the web interface,
# the one below will no longer be valid.
# If you find yourself locked out of your Zope/Python installation, you may
# add an emergency user via "bin/plonectl adduser".
user=admin:admin


############################################
# Debug Options
# -------------
# Start Zope/Plone instances in "fg" mode to turn on debug mode;
# this will dramatically slow Plone.
#
# Add-on developers should turn deprecation warnings on
deprecation-warnings = off
# change verbose-security to "on" for useful security errors while developing
verbose-security = off


############################################
# Parts Specification
#--------------------
# Specifies the components that should be included in the buildout.
# Most are defined in the base.cfg extension; you may add your
# own if you need them at the end of this file.
parts =
    instance
    backup
    scripts
    zeoserver

############################################
# Major Parts
# ----------------------
# These common parts make use of sane base settings from
# base.cfg. To customize a part, just add whatever options
# you need. Read base.cfg for common settings.
#

[instance]
recipe = plone.recipe.zope2instance
effective-user = ${buildout:effective-user}
http-address = 8080

zodb-cache-size = 3000

zeo-address = ${zeoserver:zeo-address}
zeo-client = on
shared-blob = on

environment-vars =
    BROKER_URL sqla+sqlite:///${buildout:directory}/celerydb.sqlite
    CELERY_RESULT_BACKEND db+sqlite:///${buildout:directory}/celeryresults.sqlit


eggs =
    Plone
    eea.facetednavigation
    politikus.contenttypes
    popolo.contenttypes
    politikus.bods
    ocds.contenttypes
    collective.documentviewer
    collective.celery
    collective.vocabularies.iso
    celery[sqlalchemy]


############################################
# Versions Specification
# ----------------------
# Version information supplied here will "pin" Python packages to a particular
# version number, even when you use the "newest" flag running buildout.
# Specifying versions for all packages is a good idea and can prevent
# accidental changes when you add new packages to your buildout.
# Note that versions specified here will override those specified earlier
# in the configuration, including those from the Plone and Zope version
# config files.
#
[versions]

collective.documentviewer = 6.0.0

[zeoserver]
recipe = plone.recipe.zeoserver
zeo-address = 8490
file-storage = ${buildout:directory}/var/filestorage/Data.fs
blob-storage = ${buildout:directory}/var/blobstorage/
effective-user = ${instance:effective-user}
pack-days = 30

[backup]
recipe = collective.recipe.backup

[scripts]
recipe = zc.recipe.egg
interpreter = zopepy
eggs = ${instance:eggs}
scripts = pcelery

